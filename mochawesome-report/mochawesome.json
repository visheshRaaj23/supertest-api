{
  "stats": {
    "suites": 5,
    "tests": 19,
    "passes": 13,
    "pending": 6,
    "failures": 0,
    "start": "2021-09-19T15:31:38.961Z",
    "end": "2021-09-19T15:31:41.925Z",
    "duration": 2964,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 31.57894736842105,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d349097-60d9-47fe-94c8-5aca56c05d40",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 420,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var userArray = await createRandomUser(TOKEN);\nuserId = userArray.name;\npostId = userArray.id;",
          "err": {},
          "uuid": "76228a89-2e40-4e56-904f-5244d0312e1e",
          "parentUUID": "7d349097-60d9-47fe-94c8-5aca56c05d40",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fa1d9440-d125-4864-a668-43b9edb65031",
          "title": "/POST /GET /PUT /DELETE Users",
          "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\end2EndUsersTest.js",
          "file": "\\test\\end2EndUsersTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "54c3e789-3bd3-403f-b056-7da372bf08af",
              "title": "/POST /users",
              "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\end2EndUsersTest.js",
              "file": "\\test\\end2EndUsersTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "/POST /users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /POST /users",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let constructPayload = Object.assign({},JSON.parse(JSON.stringify(addUser)));\nawait request.post(\"users\").set('Authorization',`Bearer ${TOKEN}`).send(constructPayload).expect(201)\n.expect(\"Content-Type\",/json/).then((response) =>{\n        console.log(response.body);\n        UserId = response.body.data.id;\n        console.log(\"UserID:\"+UserId);\n        expect(response.body).to.be.not.empty;\n        expect(response.body.data.name).to.be.eq(addUser.name);\n}).catch((error) =>{\n    console.log(error.message);\n})",
                  "err": {},
                  "uuid": "9d36e8e7-2d5d-466f-b1f4-77052d30c71b",
                  "parentUUID": "54c3e789-3bd3-403f-b056-7da372bf08af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/GET/:user users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /GET/:user users",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.get(`users/${UserId}`).set(\"Authorization\",`Bearer ${TOKEN}`).expect(200).expect(\"Content-Type\",\"/json/\").then((response) =>{\n    expect(response.body).not.to.be.empty;\n    expect(response.body.data.id).to.be.eq(UserId);\n    expect(response.body.data.length).to.be.eq(5);\n}).catch((error) =>{\n    new Error(\"Found new \"+error.message);\n});",
                  "err": {},
                  "uuid": "6d9fb8ec-8636-4172-8d2e-35c79ceca9c2",
                  "parentUUID": "54c3e789-3bd3-403f-b056-7da372bf08af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/GET All /users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /GET All /users",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response=request.get(\"users\").set(\"Authorization\",`Bearer ${TOKEN}`).expect(200).expect(\"Content-Type\",/json/);\nresponse.then((response) =>{    \n    let dataReturned = response.body.data;\n    for(let match of dataReturned){\n        if(match.id===UserId){\n            console.log(UserId);\n            console.log(\"Record found in the payload /users\");\n            break;\n        }else{\n            continue;\n        }\n    }    \n}).catch((error) =>{\n        console.log(error.message);\n});",
                  "err": {},
                  "uuid": "33428e58-471a-4f0c-9b8c-2d714608077f",
                  "parentUUID": "54c3e789-3bd3-403f-b056-7da372bf08af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/PUT users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /PUT users",
                  "timedOut": false,
                  "duration": 271,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const payload = {\n    \"gender\": \"Female\",\n    \"status\": \"Inactive\"\n        }\nlet modifyUserPayload = Object.assign({},JSON.parse(JSON.stringify(payload)));\nconsole.log(`userID:${UserId}`);\nawait request.put(`users/${UserId}`).set(\"Authorization\",`Bearer ${TOKEN}`).\nsend(modifyUserPayload).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body.data);\n    console.log(response.statusCode);\n    // expect(response.body.data.gender).to.be.eq((JSON.parse(payload)).gender);\n    // expect(response.body.data.status).to.be.eq(payload.status);\n})",
                  "err": {},
                  "uuid": "4c088afb-be75-4aa9-a540-2d44c1c335b3",
                  "parentUUID": "54c3e789-3bd3-403f-b056-7da372bf08af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/DELETE users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /DELETE users",
                  "timedOut": false,
                  "duration": 144,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.delete(`users/${UserId}`).set(\"Authorization\",`Bearer ${TOKEN}`).expect(200).expect(\"Content-Type\",/json/)\n.then((response) =>{\n    console.log(response.statusCode);\n}).catch((error) =>{\n    console.log(error.message);\n});",
                  "err": {},
                  "uuid": "7f4b211a-564e-4f9b-9a26-caab2a35ea1c",
                  "parentUUID": "54c3e789-3bd3-403f-b056-7da372bf08af",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d36e8e7-2d5d-466f-b1f4-77052d30c71b",
                "6d9fb8ec-8636-4172-8d2e-35c79ceca9c2",
                "33428e58-471a-4f0c-9b8c-2d714608077f",
                "4c088afb-be75-4aa9-a540-2d44c1c335b3",
                "7f4b211a-564e-4f9b-9a26-caab2a35ea1c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 741,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "f749b28c-7ceb-4a2c-ae21-192a5bbffe1a",
          "title": "User Posts",
          "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\posts.js",
          "file": "\\test\\posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "/POST /posts",
              "fullTitle": "User Posts /POST /posts",
              "timedOut": false,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(userId);\nconsole.log(postId);\nreturn await request.post(`users/${postId}/posts`).set('Authorization',`Bearer ${TOKEN}`).send(payloadAddPost)\n.expect(201).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(201);\n});",
              "err": {},
              "uuid": "869bb3fd-51a1-4a08-871d-23f82d9dbfb0",
              "parentUUID": "f749b28c-7ceb-4a2c-ae21-192a5bbffe1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/GET /posts/:id",
              "fullTitle": "User Posts /GET /posts/:id",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return await request.get(`users/${postId}/posts`).set('Authorization',`Bearer ${TOKEN}`).expect(200).\nexpect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    console.log(response.statusCode);\n});",
              "err": {},
              "uuid": "c825f3f5-b1b7-44a1-834f-33426ec19da5",
              "parentUUID": "f749b28c-7ceb-4a2c-ae21-192a5bbffe1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a5ff9dca-76c1-4950-9e2f-0b5b354a3e11",
              "title": "Negative Tests",
              "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\posts.js",
              "file": "\\test\\posts.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "/POST /posts",
                  "fullTitle": "User Posts Negative Tests /POST /posts",
                  "timedOut": false,
                  "duration": 448,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/${postId}/posts`).set('Authorization',`Bearer ${TOKEN}`).send(\"\")\n.expect(422).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(422);\n});",
                  "err": {},
                  "uuid": "126c4ca3-3451-44de-9f97-bbeee442c135",
                  "parentUUID": "a5ff9dca-76c1-4950-9e2f-0b5b354a3e11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/POST /posts",
                  "fullTitle": "User Posts Negative Tests /POST /posts",
                  "timedOut": false,
                  "duration": 109,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/420 /posts`).set('Authorization',`Bearer ${TOKEN}`).send(\"\")\n.expect(422).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(422);\n});",
                  "err": {},
                  "uuid": "6dd37bb0-b9ad-463f-a3c4-d7b221d7b010",
                  "parentUUID": "a5ff9dca-76c1-4950-9e2f-0b5b354a3e11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/POST /posts Invalid AuthToken",
                  "fullTitle": "User Posts Negative Tests /POST /posts Invalid AuthToken",
                  "timedOut": false,
                  "duration": 120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/420 /posts`).set('Authorization',`Bearer ${TOKEN}`).send(\"\")\n.expect(422).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(422);\n});",
                  "err": {},
                  "uuid": "be62b6f4-d8e8-480f-913e-ced94042a96c",
                  "parentUUID": "a5ff9dca-76c1-4950-9e2f-0b5b354a3e11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/POST /posts Invalid AuthToken",
                  "fullTitle": "User Posts Negative Tests /POST /posts Invalid AuthToken",
                  "timedOut": false,
                  "duration": 130,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/${postId}/posts`).set('Authorization',`Bearer 524e7c5609e5837a058dvfvjkwbef84ad942d7d76e70b35becff4cfdd488de23681ef46`).send(payload)\n.expect(401).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(401);\n});",
                  "err": {},
                  "uuid": "86a37598-5815-47e4-9c54-fde1053523bd",
                  "parentUUID": "a5ff9dca-76c1-4950-9e2f-0b5b354a3e11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "126c4ca3-3451-44de-9f97-bbeee442c135",
                "6dd37bb0-b9ad-463f-a3c4-d7b221d7b010",
                "be62b6f4-d8e8-480f-913e-ced94042a96c",
                "86a37598-5815-47e4-9c54-fde1053523bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 807,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [
            "869bb3fd-51a1-4a08-871d-23f82d9dbfb0",
            "c825f3f5-b1b7-44a1-834f-33426ec19da5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
          "title": "/users Test the API\"s for GET, POST, PUT,DELETE",
          "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\users.js",
          "file": "\\test\\users.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "/users GET",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users GET",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e8af78e6-41cf-4bea-867d-c605ac7be215",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users:id /GET",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users:id /GET",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "4283067f-5a1f-4583-85d2-829885487ee1",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users/:id /GET using filter",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users/:id /GET using filter",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "9f70ea93-6051-40c6-8288-6795979ce3bc",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users/:id /GET for multiple IDs",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users/:id /GET for multiple IDs",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "2c6ae546-bbe3-4150-8c67-3e41cd04bd45",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users POST",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users POST",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "876949a5-5bc7-4d0c-a028-23f5a268ad6d",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users POST and DELETE",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users POST and DELETE",
              "timedOut": false,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let payload = {\n    \"name\":`Shaikh_Ruksana${Math.floor(Math.random()*9999)}`,\n     \"gender\":\"Female\",\n     \"email\":`shaikh.ruksana${Math.floor(Math.random()*9999)}@15ceabcdefg.com`,\n      \"status\":\"Active\"\n        }\n        \n        var payload_addUsers = Object.assign({},JSON.parse(JSON.stringify(payload)));\nreturn await request.post(\"users\").set(\"Authorization\",`Bearer ${TOKEN}`).send(payload_addUsers).expect(201).expect(\"Content-Type\",/json/)\n.then((response) =>{\n        console.log(response.body);\n        id = response.body.data.id;\n        expect(response.status).to.be.eq(201);\n});",
              "err": {},
              "uuid": "844b5cda-62cb-4908-9017-a0ad8b19736e",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users DELETE",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users DELETE",
              "timedOut": false,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.delete(\"users/\"+id).set(\"Authorization\",`Bearer ${TOKEN}`).end((error,response) =>{\n   console.log(response.status);\n   expect(response.status).to.be.eq(204);\n   console.log(error);\n   done();\n            });",
              "err": {},
              "uuid": "556bce8b-5813-4213-ac2d-a7463d3eea25",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/PUT /users/:id",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /PUT /users/:id",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6dd0de29-e976-4c45-87b6-c792101c3a8b",
              "parentUUID": "a73eeb5b-7ec4-41f2-9959-fa2e4046b1dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "844b5cda-62cb-4908-9017-a0ad8b19736e",
            "556bce8b-5813-4213-ac2d-a7463d3eea25"
          ],
          "failures": [],
          "pending": [
            "e8af78e6-41cf-4bea-867d-c605ac7be215",
            "4283067f-5a1f-4583-85d2-829885487ee1",
            "9f70ea93-6051-40c6-8288-6795979ce3bc",
            "2c6ae546-bbe3-4150-8c67-3e41cd04bd45",
            "876949a5-5bc7-4d0c-a028-23f5a268ad6d",
            "6dd0de29-e976-4c45-87b6-c792101c3a8b"
          ],
          "skipped": [],
          "duration": 254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}