{
  "stats": {
    "suites": 5,
    "tests": 19,
    "passes": 13,
    "pending": 6,
    "failures": 0,
    "start": "2021-09-20T18:04:03.678Z",
    "end": "2021-09-20T18:04:05.661Z",
    "duration": 1983,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 31.57894736842105,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "566781f9-fb60-4a40-893e-95d03ea5f7f5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 458,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var userArray = await createRandomUser(TOKEN);\nuserId = userArray.name;\npostId = userArray.id;",
          "err": {},
          "uuid": "b29566c8-2ee8-4894-b623-3c7fe8107726",
          "parentUUID": "566781f9-fb60-4a40-893e-95d03ea5f7f5",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d846fa6a-7be1-41cd-90d4-838ee9060822",
          "title": "/POST /GET /PUT /DELETE Users",
          "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\end2EndUsersTest.js",
          "file": "\\test\\end2EndUsersTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4b6ec530-7fe8-48f3-bf32-8699bdaf8a12",
              "title": "/POST /users",
              "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\end2EndUsersTest.js",
              "file": "\\test\\end2EndUsersTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "/POST /users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /POST /users",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let constructPayload = Object.assign({},JSON.parse(JSON.stringify(addUser)));\nawait request.post(\"users\").set('Authorization',`Bearer ${TOKEN}`).send(constructPayload).expect(201)\n.expect(\"Content-Type\",/json/).then((response) =>{\n        console.log(response.body);\n        UserId = response.body.data.id;\n        console.log(\"UserID:\"+UserId);\n        expect(response.body).to.be.not.empty;\n        expect(response.body.data.name).to.be.eq(addUser.name);\n}).catch((error) =>{\n    console.log(error.message);\n})",
                  "err": {},
                  "uuid": "aff47c94-d106-4188-9019-84471b2e73e5",
                  "parentUUID": "4b6ec530-7fe8-48f3-bf32-8699bdaf8a12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/GET/:user users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /GET/:user users",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await request.get(`users/${UserId}`).set(\"Authorization\",`Bearer ${TOKEN}`).expect(200).expect(\"Content-Type\",\"/json/\").then((response) =>{\n    expect(response.body).not.to.be.empty;\n    expect(response.body.data.id).to.be.eq(UserId);\n    expect(response.body.data.length).to.be.eq(5);\n}).catch((error) =>{\n    new Error(\"Found new \"+error.message);\n});",
                  "err": {},
                  "uuid": "77fd9101-de1f-474b-8378-90b2b5d29d8a",
                  "parentUUID": "4b6ec530-7fe8-48f3-bf32-8699bdaf8a12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/GET All /users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /GET All /users",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response=request.get(\"users\").set(\"Authorization\",`Bearer ${TOKEN}`).expect(200).expect(\"Content-Type\",/json/);\nresponse.then((response) =>{    \n    let dataReturned = response.body.data;\n    for(let match of dataReturned){\n        if(match.id===UserId){\n            console.log(UserId);\n            console.log(\"Record found in the payload /users\");\n            break;\n        }else{\n            continue;\n        }\n    }    \n}).catch((error) =>{\n        console.log(error.message);\n});",
                  "err": {},
                  "uuid": "0697ea7f-86fc-4407-9aac-1ad497ebeeab",
                  "parentUUID": "4b6ec530-7fe8-48f3-bf32-8699bdaf8a12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/PUT users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /PUT users",
                  "timedOut": false,
                  "duration": 95,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const payload = {\n    \"gender\": \"Female\",\n    \"status\": \"Inactive\"\n        }\nlet modifyUserPayload = Object.assign({},JSON.parse(JSON.stringify(payload)));\nconsole.log(`userID:${UserId}`);\nawait request.put(`users/${UserId}`).set(\"Authorization\",`Bearer ${TOKEN}`).\nsend(modifyUserPayload).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body.data);\n    console.log(response.statusCode);\n    // expect(response.body.data.gender).to.be.eq((JSON.parse(payload)).gender);\n    // expect(response.body.data.status).to.be.eq(payload.status);\n})",
                  "err": {},
                  "uuid": "f4451194-d054-4c78-9d41-2bf8c8be0f27",
                  "parentUUID": "4b6ec530-7fe8-48f3-bf32-8699bdaf8a12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/DELETE users",
                  "fullTitle": "/POST /GET /PUT /DELETE Users /POST /users /DELETE users",
                  "timedOut": false,
                  "duration": 187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.delete(`users/${UserId}`).set(\"Authorization\",`Bearer ${TOKEN}`).expect(200).expect(\"Content-Type\",/json/)\n.then((response) =>{\n    console.log(response.statusCode);\n}).catch((error) =>{\n    console.log(error.message);\n});",
                  "err": {},
                  "uuid": "f2d821c4-4d61-40aa-a361-1f0cdd398216",
                  "parentUUID": "4b6ec530-7fe8-48f3-bf32-8699bdaf8a12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aff47c94-d106-4188-9019-84471b2e73e5",
                "77fd9101-de1f-474b-8378-90b2b5d29d8a",
                "0697ea7f-86fc-4407-9aac-1ad497ebeeab",
                "f4451194-d054-4c78-9d41-2bf8c8be0f27",
                "f2d821c4-4d61-40aa-a361-1f0cdd398216"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 450,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "c1a70878-f82d-44a8-a8e1-337d08fe97e0",
          "title": "User Posts",
          "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\posts.js",
          "file": "\\test\\posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "/POST /posts",
              "fullTitle": "User Posts /POST /posts",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(userId);\nconsole.log(postId);\nreturn await request.post(`users/${postId}/posts`).set('Authorization',`Bearer ${TOKEN}`).send(payloadAddPost)\n.expect(201).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(201);\n});",
              "err": {},
              "uuid": "b0574264-e7c7-4314-a60f-df09e5ad121b",
              "parentUUID": "c1a70878-f82d-44a8-a8e1-337d08fe97e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/GET /posts/:id",
              "fullTitle": "User Posts /GET /posts/:id",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return await request.get(`users/${postId}/posts`).set('Authorization',`Bearer ${TOKEN}`).expect(200).\nexpect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    console.log(response.statusCode);\n});",
              "err": {},
              "uuid": "a71c7b1a-5db6-405e-b22b-ea7c76ebfde8",
              "parentUUID": "c1a70878-f82d-44a8-a8e1-337d08fe97e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b88b80be-d62b-4f2c-9abd-e123318da2ed",
              "title": "Negative Tests",
              "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\posts.js",
              "file": "\\test\\posts.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "/POST /posts",
                  "fullTitle": "User Posts Negative Tests /POST /posts",
                  "timedOut": false,
                  "duration": 93,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/${postId}/posts`).set('Authorization',`Bearer ${TOKEN}`).send(\"\")\n.expect(422).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(422);\n});",
                  "err": {},
                  "uuid": "15bdcba5-ff08-4110-82c9-a172be4e1b7b",
                  "parentUUID": "b88b80be-d62b-4f2c-9abd-e123318da2ed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/POST /posts",
                  "fullTitle": "User Posts Negative Tests /POST /posts",
                  "timedOut": false,
                  "duration": 102,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/420 /posts`).set('Authorization',`Bearer ${TOKEN}`).send(\"\")\n.expect(422).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(422);\n});",
                  "err": {},
                  "uuid": "37ab2570-b321-4c74-a047-691bb991eeba",
                  "parentUUID": "b88b80be-d62b-4f2c-9abd-e123318da2ed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/POST /posts Invalid AuthToken",
                  "fullTitle": "User Posts Negative Tests /POST /posts Invalid AuthToken",
                  "timedOut": false,
                  "duration": 91,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/420 /posts`).set('Authorization',`Bearer ${TOKEN}`).send(\"\")\n.expect(422).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(422);\n});",
                  "err": {},
                  "uuid": "0ed24b68-7afd-42e3-aa5f-bcce8b68335d",
                  "parentUUID": "b88b80be-d62b-4f2c-9abd-e123318da2ed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "/POST /posts Invalid AuthToken",
                  "fullTitle": "User Posts Negative Tests /POST /posts Invalid AuthToken",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return await request.post(`users/${postId}/posts`).set('Authorization',`Bearer 524e7c5609e5837a058dvfvjkwbef84ad942d7d76e70b35becff4cfdd488de23681ef46`).send(payload)\n.expect(401).expect(\"Content-Type\",/json/).then((response) =>{\n    console.log(response.body);\n    expect(response.statusCode).to.be.eq(401);\n});",
                  "err": {},
                  "uuid": "880ff834-e688-4764-af4b-1e585c70fa76",
                  "parentUUID": "b88b80be-d62b-4f2c-9abd-e123318da2ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "15bdcba5-ff08-4110-82c9-a172be4e1b7b",
                "37ab2570-b321-4c74-a047-691bb991eeba",
                "0ed24b68-7afd-42e3-aa5f-bcce8b68335d",
                "880ff834-e688-4764-af4b-1e585c70fa76"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 371,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [
            "b0574264-e7c7-4314-a60f-df09e5ad121b",
            "a71c7b1a-5db6-405e-b22b-ea7c76ebfde8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 200,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "c7620829-1bee-4829-a88e-08bc60e7e0da",
          "title": "/users Test the API\"s for GET, POST, PUT,DELETE",
          "fullFile": "C:\\Users\\Vishesh and Varsha\\Desktop\\Trainings\\Supertest Mocha\\supertest-api\\test\\users.js",
          "file": "\\test\\users.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "/users GET",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users GET",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e9a53789-e7e6-447b-9644-ea47b7f44318",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users:id /GET",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users:id /GET",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6b52e075-25a7-4585-8b37-d7ed4a7528fc",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users/:id /GET using filter",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users/:id /GET using filter",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "7030cee6-9195-40e2-be88-425f9bd313dd",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users/:id /GET for multiple IDs",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users/:id /GET for multiple IDs",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d89103bd-ad68-4a82-8584-a79c8c73f97f",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users POST",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users POST",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "957b055b-62b4-4e71-a077-e6ab3372bb02",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users POST and DELETE",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users POST and DELETE",
              "timedOut": false,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let payload = {\n    \"name\":`Shaikh_Ruksana${Math.floor(Math.random()*9999)}`,\n     \"gender\":\"Female\",\n     \"email\":`shaikh.ruksana${Math.floor(Math.random()*9999)}@15ceabcdefg.com`,\n      \"status\":\"Active\"\n        }\n        \n        var payload_addUsers = Object.assign({},JSON.parse(JSON.stringify(payload)));\nreturn await request.post(\"users\").set(\"Authorization\",`Bearer ${TOKEN}`).send(payload_addUsers).expect(201).expect(\"Content-Type\",/json/)\n.then((response) =>{\n        console.log(response.body);\n        id = response.body.data.id;\n        expect(response.status).to.be.eq(201);\n});",
              "err": {},
              "uuid": "bcd57e06-21bb-4b53-8e43-3040e2c1f4ed",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/users DELETE",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /users DELETE",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.delete(\"users/\"+id).set(\"Authorization\",`Bearer ${TOKEN}`).end((error,response) =>{\n   console.log(response.status);\n   expect(response.status).to.be.eq(204);\n   console.log(error);\n   done();\n            });",
              "err": {},
              "uuid": "372ca812-d8f1-480e-addf-cee306567841",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "/PUT /users/:id",
              "fullTitle": "/users Test the API\"s for GET, POST, PUT,DELETE /PUT /users/:id",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "babbf76d-927e-4753-8ec0-77ab33ee3802",
              "parentUUID": "c7620829-1bee-4829-a88e-08bc60e7e0da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcd57e06-21bb-4b53-8e43-3040e2c1f4ed",
            "372ca812-d8f1-480e-addf-cee306567841"
          ],
          "failures": [],
          "pending": [
            "e9a53789-e7e6-447b-9644-ea47b7f44318",
            "6b52e075-25a7-4585-8b37-d7ed4a7528fc",
            "7030cee6-9195-40e2-be88-425f9bd313dd",
            "d89103bd-ad68-4a82-8584-a79c8c73f97f",
            "957b055b-62b4-4e71-a077-e6ab3372bb02",
            "babbf76d-927e-4753-8ec0-77ab33ee3802"
          ],
          "skipped": [],
          "duration": 195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}